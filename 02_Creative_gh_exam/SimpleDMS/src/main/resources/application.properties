# \uD3EC\uD2B8 \uC124\uC815
server.port=8000

# .yml \uC124\uC815
#server:
# port: '8000'

# \uB85C\uCEEC \uCEF4\uD4E8\uD130 DB \uC811\uC18D \uC815\uBCF4
# driver-class-name=db\uB77C\uC774\uBE0C\uB7EC\uB9AC : DB \uB77C\uC774\uBE0C\uB7EC\uB9AC \uC815\uBCF4(Oracle, Mysql \uB4F1\uB4F1)
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# url=db\uC811\uC18D\uC815\uBCF4 : jdbc:log4jdbc:oracle:thin:@DBip\uC815\uBCF4:DB\uD3EC\uD2B8\uBC88\uD638/DB\uBA85
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
# username=DB\uACC4\uC815\uBA85
spring.datasource.username=scott
# password=DB\uD328\uC2A4\uC6CC\uB4DC
spring.datasource.password=tiger

# .yml \uC124\uC815
#spring:
# datasource:
#  driver-class-name: 'net.sf.log4jdbc.sql.jdbcapi.DriverSpy'
#  url : jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
#  username: scott
#  password: tiger


# \uC624\uB77C\uD074 \uD074\uB77C\uC6B0\uB4DC DB \uC811\uC18D \uC815\uBCF4
#spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
## jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=\uC804\uC790\uC9C0\uAC11\uACBD\uB85C
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@orcl_low?TNS_ADMIN=D:/work/97_eWallet/Wallet_orcl/
#spring.datasource.username=scott
#spring.datasource.password=Ds1234567890

## HikariCP settings : \uD074\uB77C\uC6B0\uB4DC DB \uC811\uC18D\uC744 1\uAC1C\uB85C \uC81C\uD55C\uD558\uB294 \uC124\uC815
#spring.datasource.hikari.minimumIdle=1
#spring.datasource.hikari.maximumPoolSize=1
#spring.datasource.hikari.poolName=HikariPoolBooks

# jpa \uC124\uC815
# .ddl-auto=create -> \uC11C\uBC84 \uC7AC\uC2DC\uC791 \uC2DC \uAE30\uC874 \uD14C\uC774\uBE14(DB \uC624\uBE0C\uC81D\uD2B8) \uC0AD\uC81C \uD6C4 \uB2E4\uC2DC \uC0DD\uC131\uD558\uB294 \uC635\uC158
# .ddl-auto=update -> \uC11C\uBC84 \uC7AC\uC2DC\uC791 \uC2DC \uD14C\uC774\uBE14(DB \uC624\uBE0C\uC81D\uD2B8) \uC5C6\uB294 \uAC83\uB9CC \uB2E4\uC2DC \uC0DD\uC131\uD558\uB294 \uC635\uC158
# .ddl-auto=none -> \uC11C\uBC84 \uC7AC\uC2DC\uC791 \uC2DC \uC544\uBB34 \uAC83\uB3C4 \uC548\uD568
# spring.jpa.show-sql=true : \uC2A4\uD504\uB9C1 \uCF58\uC194\uC5D0 sql\uBB38\uC744 \uBCF4\uC5EC\uC8FC\uB294 \uB85C\uADF8 \uD65C\uC131\uD654
# spring.jpa.database-platform=DB_\uC81C\uD488\uC124\uC815(Oracle, MySql \uB4F1)
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.show-sql=true
# 1) resource/data.sql \uC790\uB3D9 \uC2E4\uD589 ( DML \uC2E4\uD589 )
#  -> data.sql ( dml \uC2E4\uD589 ), schema.sql ( ddl \uC2E4\uD589 )
spring.jpa.defer-datasource-initialization=true
# sql log \uCC0D\uAE30
spring.jpa.properties.hibernate.format_sql=true
#Logging Setting , hibernate info \uB808\uBCA8 \uB85C\uAE45 \uC124\uC815 : debug, trace \uB4F1
logging.level.org.hibernate=info
# 2)  resource/data.sql \uC790\uB3D9 \uC2E4\uD589 ( DML \uC2E4\uD589 )
#  -> data.sql ( dml \uC2E4\uD589 ), schema.sql ( ddl \uC2E4\uD589 )
spring.sql.init.mode=always

# \uCCA8\uBD80\uD30C\uC77C \uC5C5\uB85C\uB4DC \uC0AC\uC774\uC988 \uC81C\uD55C
# \uAE30\uBCF8 \uC5C5\uB85C\uB4DC \uC0AC\uC774\uC988 : 1MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# \uC11C\uBC84 \uC2DC\uC791\uC2DC sql\uBB38 \uC2E4\uD589\uD560 \uB54C \uC624\uB958 \uBB34\uC2DC\uD558\uACE0 \uACC4\uC18D \uC9C4\uD589
spring.sql.init.continue-on-error=true


# \uC790\uBC14 \uC18C\uC2A4 \uBCC0\uACBD \uC2DC \uC790\uB3D9 \uC7AC\uC2DC\uC791 ( \uC2DC\uAC04 \uD2C8\uC774 \uC788\uC74C )
spring.devtools.restart.enabled=true


